#ifndef MAINWINDOW_H
#define MAINWINDOW_H

// Qt headers
#include <QMainWindow>
#include <QMouseEvent>
#include <QComboBox>

// internal headers
#include "mypaintwidget.h"

namespace Ui {
class MainWindow;
}

/**
 * @brief The MainWindow class
 * @detailed This class implements main window of program
 * including interface and relations with other classes
 */
class MainWindow : public QMainWindow
{
    Q_OBJECT

    Ui::MainWindow *ui;
    MyPaintWidget *myPaintWidget;

    QPoint m_press, m_release;
    bool m_pressed = false;
    bool m_pencil = false;

    int m_width = 1;
    QColor m_color = Qt::red;

    Shape* getFigure(const QPoint &, const QPoint &) const;
    void uncheckWidth();
    void uncheckFigure();

public:
/**
 * @brief Constructor
 * @detailed Only initializes parent and some default values
 * @param parent Parent QWidget of MyPaintWidget, default value is 0
 */
    explicit MainWindow(QWidget *parent = 0);
 /**
  * @brief ~MainWindow
  * @detailed Destructor, deletes ui (generated by Qt)
  */
    ~MainWindow();

/**
 * @brief mousePressEvent
 * @detailed called every mouse click, creates new figure if click is on
 * painting area
 * @param event not used
 */
    void mousePressEvent(QMouseEvent *event);
/**
 * @brief mouseMoveEvent
 * @detailed called everytime when user moves mouse shift, changes figure
 * size if it was created on last mouse click
 * @param event not used
 */
    void mouseMoveEvent(QMouseEvent *event);
/**
 * @brief mouseReleaseEvent
 * @detailed called everytime when user releases mouse button, finished
 * creating of figure
 * @param event not used
 */
    void mouseReleaseEvent(QMouseEvent *event);

private slots:
    void on_actionUndo_triggered();

    void on_action1_triggered();
    void on_action2_triggered();
    void on_action3_triggered();

    void on_actionOther_triggered();
    void on_actionPickColor_triggered();

    void on_actionLine_triggered();
    void on_actionRectangle_triggered();
    void on_actionEllipse_triggered();      

    void on_pencil_triggered();
};

#endif // MAINWINDOW_H
